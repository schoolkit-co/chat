##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

upstream webapp_in_nginx {
	server LibreChat1:3081 max_fails=0;
	# server LibreChat2:3082 max_fails=0;
	keepalive 32;
}

upstream webapp_dev {
	# server LibreChat1:3081 max_fails=0;
	server LibreChat2:3082 max_fails=0;
	keepalive 32;
}

# Default server configuration
#
server {
	listen 3080;
	listen [::]:3080;

	index index.html index.htm index.nginx-debian.html;
	client_max_body_size 10G;
	access_log on;

	server_name _;

	# Redirect all requests for */favicon.ico to /favicon.ico
	location ~* /favicon\.ico$ {
		return 301 /favicon.ico;
	}

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		# if a file does not exist in the specified root and nothing else is definded, we want to serve the request via node.js
		proxy_pass http://webapp_in_nginx;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
		proxy_buffering off;

		proxy_connect_timeout 30s;
		proxy_send_timeout 30s;
		proxy_read_timeout 30s;
		send_timeout 30s;
	}

	location ~ /\. {
		deny all;
	}

	location /status {
		stub_status on;
	}
}

server {
	listen 3090;
	listen [::]:3090;

	index index.html index.htm index.nginx-debian.html;
	client_max_body_size 10G;
	access_log on;

	server_name _;

	# Redirect all requests for */favicon.ico to /favicon.ico
	location ~* /favicon\.ico$ {
		return 301 /favicon.ico;
	}

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		# if a file does not exist in the specified root and nothing else is definded, we want to serve the request via node.js
		proxy_pass http://webapp_dev;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
		proxy_buffering off;

		proxy_connect_timeout 30s;
		proxy_send_timeout 30s;
		proxy_read_timeout 30s;
		send_timeout 30s;
	}

	location ~ /\. {
		deny all;
	}
}

# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
