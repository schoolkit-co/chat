##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

upstream webapp_in_nginx {
	server LibreChat1:3081 max_fails=0;
	# server LibreChat2:3082 max_fails=0;
	keepalive 32;
}

# Default server configuration
#
server {
	listen 3080;
	listen [::]:3080;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	# Add index.php to the list if you are using PHP
	index index.php index.html index.htm index.nginx-debian.html;
	client_max_body_size 10G;
	#access_log on;

	server_name _;

		# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	
	# location ~ \.php$ {
	# 	root /usr/share/nginx/html;
	# 	include snippets/fastcgi-php.conf;
	
	# 	# With php7.0-cgi alone:
	# 	# fastcgi_pass 127.0.0.1:9000;
	# 	# With php7.0-fpm:
	# 	fastcgi_pass unix:/run/php/php7.0-fpm.sock;
	# }

	# Redirect all requests for */favicon.ico to /favicon.ico
	location ~* /favicon\.ico$ {
		return 301 /favicon.ico;
	}

# 	location ~ ^/pma/? {
# 		root /usr/share/nginx/html;
# #		rewrite ^/pma(.)*$ /pma/$1 break;
# 		try_files $uri $uri/ =404;
# 	}

# 	location ~ ^/editor/v2/(.)*\.(.)*$ {
#     root /usr/share/nginx/html/codekit-editor-v2/src;
# 		rewrite ^/editor/v2/(.*)$ /$1 break;
# 		expires 1h;
# 		add_header Cache-Control "public, max-age=3600, stale-while-revalidate=86400";
# 		proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
#     try_files $uri $uri/ =404;
#   }
# 	location ~ ^/editor/v1/(.)*\.(.)*$ {
#     root /usr/share/nginx/html/codekit-editor-v1/src;
# 		rewrite ^/editor/v1/(.*)$ /$1 break;
# 		expires 1h;
# 		add_header Cache-Control "public, max-age=3600, stale-while-revalidate=86400";
# 		proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
#     try_files $uri $uri/ =404;
#   }
# 	location ~ ^/editor/v3/(.)*\.(.)*$ {
#     root /usr/share/nginx/html/codekit-editor-v3/src;
# 		rewrite ^/editor/v3/(.*)$ /$1 break;
# 		expires 1h;
# 		add_header Cache-Control "public, max-age=3600, stale-while-revalidate=86400";
# 		proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
#     try_files $uri $uri/ =404;
#   }
# 	location ~ ^/api/import-student-from-excel {
# 		proxy_pass http://webapp_in_nginx;
# 		proxy_http_version 1.1;
# 		proxy_set_header Upgrade $http_upgrade;
# 		proxy_set_header Connection 'upgrade';
# 		proxy_set_header Host $host;
# 		proxy_cache_bypass $http_upgrade;
# 		proxy_buffering off;

# 		proxy_connect_timeout 600s;
# 		proxy_send_timeout 600s;
# 		proxy_read_timeout 600s;
# 		send_timeout 600s;
#   }

# 	location ~ ^/api/(quiz-ai|chat-ai|hint).* {
# 		proxy_pass http://webapp_in_nginx;
# 		proxy_http_version 1.1;
# 		proxy_set_header Upgrade $http_upgrade;
# 		proxy_set_header Connection 'upgrade';
# 		proxy_set_header Host $host;
# 		proxy_cache_bypass $http_upgrade;
# 		proxy_buffering off;

# 		proxy_connect_timeout 300s;
# 		proxy_send_timeout 300s;
# 		proxy_read_timeout 300s;
# 		send_timeout 300s;
#   }

	# location ~* \.(jpg|jpeg|png|gif|css|js|txt|html|json|woff|woff2|svg|ttf|zmem|less|svg|min\.js)$ {
	# 	root /usr/share/nginx/html/backend-static-files;
	# 	expires 1h;
	# 	sendfile on;
	# 	add_header Cache-Control "public, max-age=3600, stale-while-revalidate=86400";
	# 	try_files $uri $uri/ =404;
	# }


	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		# if a file does not exist in the specified root and nothing else is definded, we want to serve the request via node.js
		proxy_pass http://webapp_in_nginx;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
		proxy_buffering off;

		proxy_connect_timeout 30s;
		proxy_send_timeout 30s;
		proxy_read_timeout 30s;
		send_timeout 30s;
	}

	location /status {
		stub_status on;
	}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
